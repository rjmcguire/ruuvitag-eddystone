PROJECT_NAME := ruuvitag-eddystone

export OUTPUT_FILENAME
#MAKEFILE_NAME := $(CURDIR)/$(word $(words $(MAKEFILE_LIST)),$(MAKEFILE_LIST))
MAKEFILE_NAME := $(MAKEFILE_LIST)
MAKEFILE_DIR := $(dir $(MAKEFILE_NAME) ) 
SDK = ../nRF5_SDK_11.0.0_89a8197

TEMPLATE_PATH = $(SDK)/components/toolchain/gcc
ifeq ($(OS),Windows_NT)
include $(TEMPLATE_PATH)/Makefile.windows
else
include $(TEMPLATE_PATH)/Makefile.posix
endif

MK := mkdir
RM := rm -rf

#echo suspend
ifeq ("$(VERBOSE)","1")
NO_ECHO := 
else
NO_ECHO := @
endif

# Toolchain commands
CC              := '$(GNU_PREFIX)-gcc'
AS              := '$(GNU_PREFIX)-as'
AR              := '$(GNU_PREFIX)-ar' -r
LD              := '$(GNU_PREFIX)-ld'
NM              := '$(GNU_PREFIX)-nm'
OBJDUMP         := '$(GNU_PREFIX)-objdump'
OBJCOPY         := '$(GNU_PREFIX)-objcopy'
SIZE            := '$(GNU_PREFIX)-size'

#function for removing duplicates in a list
remduplicates = $(strip $(if $1,$(firstword $1) $(call remduplicates,$(filter-out $(firstword $1),$1))))

#source common to all targets
C_SOURCE_FILES += \
main.c \
$(SDK)/examples/bsp/bsp.c \
$(SDK)/components/ble/common/ble_advdata.c \
$(SDK)/components/ble/common/ble_conn_params.c \
$(SDK)/components/ble/common/ble_srv_common.c \
$(SDK)/components/ble/ble_advertising/ble_advertising.c \
$(SDK)/components/libraries/uart/app_uart.c \
$(SDK)/components/drivers_nrf/delay/nrf_delay.c \
$(SDK)/components/drivers_nrf/common/nrf_drv_common.c \
$(SDK)/components/drivers_nrf/gpiote/nrf_drv_gpiote.c \
$(SDK)/components/drivers_nrf/uart/nrf_drv_uart.c \
$(SDK)/components/drivers_nrf/pstorage/pstorage.c \
$(SDK)/external/segger_rtt/RTT_Syscalls_KEIL.c \
$(SDK)/external/segger_rtt/SEGGER_RTT.c \
$(SDK)/external/segger_rtt/SEGGER_RTT_printf.c \
$(SDK)/components/libraries/button/app_button.c \
$(SDK)/components/libraries/util/app_error.c \
$(SDK)/components/libraries/timer/app_timer.c \
$(SDK)/components/libraries/util/nrf_assert.c \
$(SDK)/components/libraries/util/nrf_log.c \
$(SDK)/components/libraries/uart/retarget.c \
$(SDK)/components/libraries/scheduler/app_scheduler.c \
$(SDK)/components/libraries/timer/app_timer_appsh.c \
$(SDK)/components/libraries/util/app_error_weak.c \
$(SDK)/components/libraries/fstorage/fstorage.c \
$(SDK)/components/libraries/util/app_util_platform.c \
$(SDK)/components/softdevice/common/softdevice_handler/softdevice_handler.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/ble_services/ble_ecs.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/modules/eddystone_ble_handler.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/modules/eddystone_adv_slot.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/modules/eddystone_security.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/modules/eddystone_registration_ui.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/modules/eddystone_flash.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/modules/eddystone_advertising_manager.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/modules/eddystone_tlm_manager.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/cifra/blockwise.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/cifra/cbcmac.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/cifra/chash.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/cifra/cmac.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/cifra/curve25519.donna.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/drbg.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/cifra/eax.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/cifra/gf128.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/cifra/hmac.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/cifra/modes.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/cifra/sha1.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/cifra/sha256.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/cifra/aes.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/rfc6234/hkdf.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/rfc6234/hmac.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/rfc6234/sha1.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/rfc6234/sha224-256.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/rfc6234/sha384-512.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/tiny-aes128-c/aes.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/rfc6234/hkdf.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/rfc6234/hkdf.c \
$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/rfc6234/hkdf.c \

# Assembly files common to all targets
ASM_SOURCE_FILES  = $(SDK)/components/toolchain/gcc/gcc_startup_nrf52.s

# Includes common to all targets
INC_PATHS  = -I../board_configs
INC_PATHS += -Iconfig
INC_PATHS += -I$(SDK)/components/ble/ble_advertising
INC_PATHS += -I$(SDK)/examples/bsp
INC_PATHS += -I$(SDK)/components/device
INC_PATHS += -I$(SDK)/components/libraries/uart
INC_PATHS += -I$(SDK)/components/drivers_nrf/delay
INC_PATHS += -I$(SDK)/components/drivers_nrf/common
INC_PATHS += -I$(SDK)/components/drivers_nrf/gpiote
INC_PATHS += -I$(SDK)/components/drivers_nrf/hal
INC_PATHS += -I$(SDK)/components/drivers_nrf/uart
INC_PATHS += -I$(SDK)/components/drivers_nrf/pstorage
INC_PATHS += -I$(SDK)/components/libraries/button
INC_PATHS += -I$(SDK)/components/libraries/util
INC_PATHS += -I$(SDK)/components/libraries/timer
INC_PATHS += -I$(SDK)/components/libraries/scheduler
INC_PATHS += -I$(SDK)/components/libraries/timer
INC_PATHS += -I$(SDK)/components/libraries/fstorage
INC_PATHS += -I$(SDK)/components/softdevice/common/softdevice_handler
INC_PATHS += -I$(SDK)/components/softdevice/s132/headers/nrf52
INC_PATHS += -I$(SDK)/components/toolchain/CMSIS/Include

# From bootloader makefile (some of these are duplicates)
INC_PATHS += -I$(SDK)/components/libraries/util
INC_PATHS += -I$(SDK)/components/libraries/timer
INC_PATHS += -I$(SDK)/components/softdevice/s132/headers
INC_PATHS += -I$(SDK)/components/ble/common
INC_PATHS += -I$(SDK)/components/drivers_nrf/common
INC_PATHS += -I$(SDK)/examples/bsp
INC_PATHS += -I$(SDK)/components/drivers_nrf/config
INC_PATHS += -I$(SDK)/components/toolchain/gcc
INC_PATHS += -I$(SDK)/components/libraries/scheduler
INC_PATHS += -I$(SDK)/components/drivers_nrf/pstorage
INC_PATHS += -I$(SDK)/components/libraries/bootloader_dfu/ble_transport
INC_PATHS += -I$(SDK)/components/softdevice/common/softdevice_handler
INC_PATHS += -I$(SDK)/components/device
INC_PATHS += -I$(SDK)/components/libraries/hci
INC_PATHS += -I$(SDK)/components/toolchain
INC_PATHS += -I$(SDK)/components/drivers_nrf/delay
INC_PATHS += -I$(SDK)/components/libraries/crc16
INC_PATHS += -I$(SDK)/components/ble/ble_services/ble_dfu
INC_PATHS += -I$(SDK)/components/drivers_nrf/hal
INC_PATHS += -I$(SDK)/components/softdevice/s132/headers/nrf52
INC_PATHS += -I$(SDK)/components/libraries/bootloader_dfu
INC_PATHS += -I$(SDK)/components/toolchain/CMSIS/Include
INC_PATHS += -I$(SDK)/components/libraries/util/app_util_platform

# Segger
INC_PATHS += -I$(SDK)/external/segger_rtt

# nrf5-sdk-for-eddystone paths
INC_PATHS += -I$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/include/ble_services
INC_PATHS += -I$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/include/def
INC_PATHS += -I$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/include/modules
INC_PATHS += -I$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/include/util

# Crypto lib paths
INC_PATHS += -I$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/cifra
INC_PATHS += -I$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/rfc6234
INC_PATHS += -I$(SDK)/examples/ble_peripheral/nrf5-sdk-for-eddystone/source/crypto_libs/tiny-aes128-c

OBJECT_DIRECTORY = _build
LISTING_DIRECTORY = $(OBJECT_DIRECTORY)
OUTPUT_BINARY_DIRECTORY = $(OBJECT_DIRECTORY)

# Sorting removes duplicates
BUILD_DIRECTORIES := $(sort $(OBJECT_DIRECTORY) $(OUTPUT_BINARY_DIRECTORY) $(LISTING_DIRECTORY) )

#flags common to all targets
CFLAGS  = -DNRF52
CFLAGS += -DBOARD_CUSTOM
CFLAGS += -DBOARD_RUUVITAG_B2
CFLAGS += -DNRF52_PAN_12
CFLAGS += -DNRF52_PAN_15
CFLAGS += -DNRF52_PAN_58
CFLAGS += -DNRF52_PAN_55
CFLAGS += -DNRF52_PAN_54
CFLAGS += -DNRF52_PAN_31
CFLAGS += -DNRF52_PAN_30
CFLAGS += -DNRF52_PAN_51
CFLAGS += -DNRF52_PAN_36
CFLAGS += -DNRF52_PAN_53
CFLAGS += -D__HEAP_SIZE=0
CFLAGS += -DS132
CFLAGS += -DCONFIG_GPIO_AS_PINRESET
CFLAGS += -DBLE_STACK_SUPPORT_REQD
CFLAGS += -DBSP_DEFINES_ONLY
CFLAGS += -DSWI_DISABLE0
CFLAGS += -DNRF52_PAN_20
CFLAGS += -DNRF52_PAN_64
CFLAGS += -DSOFTDEVICE_PRESENT
CFLAGS += -DNRF52_PAN_62
CFLAGS += -DNRF52_PAN_63
CFLAGS += -mcpu=cortex-m4
CFLAGS += -mthumb -mabi=aapcs --std=gnu99
CFLAGS += -Wall -Werror -Os -g3
CFLAGS += -mfloat-abi=hard -mfpu=fpv4-sp-d16
# keep every function in separate section. This will allow linker to dump unused functions
CFLAGS += -ffunction-sections -fdata-sections -fno-strict-aliasing
CFLAGS += -fno-builtin --short-enums

# keep every function in separate section. This will allow linker to dump unused functions
LDFLAGS += -Xlinker -Map=$(LISTING_DIRECTORY)/$(OUTPUT_FILENAME).map
LDFLAGS += -mthumb -mabi=aapcs -L $(TEMPLATE_PATH) -T$(LINKER_SCRIPT)
LDFLAGS += -mcpu=cortex-m4
LDFLAGS += -mfloat-abi=hard -mfpu=fpv4-sp-d16
# let linker to dump unused sections
LDFLAGS += -Wl,--gc-sections
# use newlib in nano version
LDFLAGS += --specs=nano.specs -lc -lnosys

# Assembler flags
ASMFLAGS += -x assembler-with-cpp
ASMFLAGS += -DNRF52
ASMFLAGS += -DBOARD_CUSTOM
ASMFLAGS += -DBOARD_RUUVITAG_B2
ASMFLAGS += -DNRF52_PAN_12
ASMFLAGS += -DNRF52_PAN_15
ASMFLAGS += -DNRF52_PAN_58
ASMFLAGS += -DNRF52_PAN_55
ASMFLAGS += -DNRF52_PAN_54
ASMFLAGS += -DNRF52_PAN_31
ASMFLAGS += -DNRF52_PAN_30
ASMFLAGS += -DNRF52_PAN_51
ASMFLAGS += -DNRF52_PAN_36
ASMFLAGS += -DNRF52_PAN_53
ASMFLAGS += -D__HEAP_SIZE=0
ASMFLAGS += -DS132
ASMFLAGS += -DCONFIG_GPIO_AS_PINRESET
ASMFLAGS += -DBLE_STACK_SUPPORT_REQD
ASMFLAGS += -DBSP_DEFINES_ONLY
ASMFLAGS += -DSWI_DISABLE0
ASMFLAGS += -DNRF52_PAN_20
ASMFLAGS += -DNRF52_PAN_64
ASMFLAGS += -DSOFTDEVICE_PRESENT
ASMFLAGS += -DNRF52_PAN_62
ASMFLAGS += -DNRF52_PAN_63
#default target - first one defined
default: clean ruuvitag-eddystone

#building all targets
all: clean
	$(NO_ECHO)$(MAKE) -f $(MAKEFILE_NAME) -C $(MAKEFILE_DIR) -e cleanobj
	$(NO_ECHO)$(MAKE) -f $(MAKEFILE_NAME) -C $(MAKEFILE_DIR) -e ruuvitag-eddystone

#target for printing all targets
help:
	@echo following targets are available:
	@echo 	ruuvitag-eddystone


C_SOURCE_FILE_NAMES = $(notdir $(C_SOURCE_FILES))
C_PATHS = $(call remduplicates, $(dir $(C_SOURCE_FILES) ) )
C_OBJECTS = $(addprefix $(OBJECT_DIRECTORY)/, $(C_SOURCE_FILE_NAMES:.c=.o) )

ASM_SOURCE_FILE_NAMES = $(notdir $(ASM_SOURCE_FILES))
ASM_PATHS = $(call remduplicates, $(dir $(ASM_SOURCE_FILES) ))
ASM_OBJECTS = $(addprefix $(OBJECT_DIRECTORY)/, $(ASM_SOURCE_FILE_NAMES:.s=.o) )

vpath %.c $(C_PATHS)
vpath %.s $(ASM_PATHS)

OBJECTS = $(C_OBJECTS) $(ASM_OBJECTS)

ruuvitag-eddystone: OUTPUT_FILENAME := ruuvitag-eddystone
ruuvitag-eddystone: LINKER_SCRIPT=../../../dfu_gcc_nrf52.ld
ruuvitag-eddystone: $(BUILD_DIRECTORIES) $(OBJECTS)
	@echo Linking target: $(OUTPUT_FILENAME).out
	$(NO_ECHO)$(CC) $(LDFLAGS) $(OBJECTS) $(LIBS) -o $(OUTPUT_BINARY_DIRECTORY)/$(OUTPUT_FILENAME).out
	$(NO_ECHO)$(MAKE) -f $(MAKEFILE_NAME) -C $(MAKEFILE_DIR) -e finalize

## Create build directories
$(BUILD_DIRECTORIES):
	echo $(MAKEFILE_NAME)
	$(MK) $@

# Create objects from C SRC files
$(OBJECT_DIRECTORY)/%.o: %.c
	@echo Compiling file: $(notdir $<)
	$(NO_ECHO)$(CC) $(CFLAGS) $(INC_PATHS) -c -o $@ $<

# Assemble files
$(OBJECT_DIRECTORY)/%.o: %.s
	@echo Compiling file: $(notdir $<)
	$(NO_ECHO)$(CC) $(ASMFLAGS) $(INC_PATHS) -c -o $@ $<


# Link
$(OUTPUT_BINARY_DIRECTORY)/$(OUTPUT_FILENAME).out: $(BUILD_DIRECTORIES) $(OBJECTS)
	@echo Linking target: $(OUTPUT_FILENAME).out
	$(NO_ECHO)$(CC) $(LDFLAGS) $(OBJECTS) $(LIBS) -o $(OUTPUT_BINARY_DIRECTORY)/$(OUTPUT_FILENAME).out


## Create binary .bin file from the .out file
$(OUTPUT_BINARY_DIRECTORY)/$(OUTPUT_FILENAME).bin: $(OUTPUT_BINARY_DIRECTORY)/$(OUTPUT_FILENAME).out
	@echo Preparing: $(OUTPUT_FILENAME).bin
	$(NO_ECHO)$(OBJCOPY) -O binary $(OUTPUT_BINARY_DIRECTORY)/$(OUTPUT_FILENAME).out $(OUTPUT_BINARY_DIRECTORY)/$(OUTPUT_FILENAME).bin

## Create binary .hex file from the .out file
$(OUTPUT_BINARY_DIRECTORY)/$(OUTPUT_FILENAME).hex: $(OUTPUT_BINARY_DIRECTORY)/$(OUTPUT_FILENAME).out
	@echo Preparing: $(OUTPUT_FILENAME).hex
	$(NO_ECHO)$(OBJCOPY) -O ihex $(OUTPUT_BINARY_DIRECTORY)/$(OUTPUT_FILENAME).out $(OUTPUT_BINARY_DIRECTORY)/$(OUTPUT_FILENAME).hex

finalize: genbin genhex echosize

genbin:
	@echo Preparing: $(OUTPUT_FILENAME).bin
	$(NO_ECHO)$(OBJCOPY) -O binary $(OUTPUT_BINARY_DIRECTORY)/$(OUTPUT_FILENAME).out $(OUTPUT_BINARY_DIRECTORY)/$(OUTPUT_FILENAME).bin

## Create binary .hex file from the .out file
genhex: 
	@echo Preparing: $(OUTPUT_FILENAME).hex
	$(NO_ECHO)$(OBJCOPY) -O ihex $(OUTPUT_BINARY_DIRECTORY)/$(OUTPUT_FILENAME).out $(OUTPUT_BINARY_DIRECTORY)/$(OUTPUT_FILENAME).hex

echosize:
	-@echo ''
	$(NO_ECHO)$(SIZE) $(OUTPUT_BINARY_DIRECTORY)/$(OUTPUT_FILENAME).out
	-@echo ''

clean:
	$(RM) $(BUILD_DIRECTORIES)

cleanobj:
	$(RM) $(BUILD_DIRECTORIES)/*.o

flash: $(MAKECMDGOALS)
	@echo Flashing: $(OUTPUT_BINARY_DIRECTORY)/$<.hex
	nrfjprog --program $(OUTPUT_BINARY_DIRECTORY)/$<.hex -f nrf52  --chiperase
	nrfjprog --reset

## Flash softdevice